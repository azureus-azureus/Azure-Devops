trigger: none

pool: Default

parameters:
- name: environment
  displayName: Environment Name
  type: string
  default: dev
  values: 
  - dev
  - prod

- name: command
  displayName: Terraform Command
  type: string
  default: plan
  values: 
  - plan
  - apply
  - destroy

variables:
  Config_Dir: '$(System.DefaultWorkingDirectory)/environment/${{parameters.environment}}'
  Azure_SC: 'DevopsServiceConnection'


stages:
  - stage: Terraform
    displayName: 'Terraform Plan for ${{parameters.environment}} Environment'
    jobs:
      - job: SecurityScanning
        displayName: Security Scanning for ${{parameters.environment}}
        steps: 
        - task: tfsec@1
          displayName: TFSec Scanning
          inputs:
            version: 'v1.26.0'
        - task: CmdLine@2
          displayName: Install TerraScan Tool
          inputs:
            script: |
              curl -sSL https://github.com/accurics/terrascan/releases/download/v1.3.1/terrascan_1.3.1_Linux_x86_64.tar.gz --output terrascan.tar.gz
              tar -xvf terrascan.tar.gz
              sudo install terrascan /usr/local/bin
        - task: CmdLine@2
          displayName: TerraScan Scanning
          inputs:
            script: 'terrascan scan /envioroment/${{parameters.environment}} -t azure -i terraform > terrascan.log 2>&1 &'
            workingDirectory: $(Config_Dir)

      - job: TerraformInfra
        displayName: Terraform ${{parameters.command}} for ${{parameters.environment}} Environment
        dependsOn: SecurityScanning
        steps:
        - task: TerraformInstaller@1
          displayName: Terraform Installation
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTaskV4@4
          displayName: Terraform Init
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: $(Config_Dir)
            backendServiceArm: $(Azure_SC)
            backendAzureRmResourceGroupName: 'ForTerraformPractice'
            backendAzureRmStorageAccountName: 'tfpractice'
            backendAzureRmContainerName: 'azureuscontainer'
            backendAzureRmKey: 'dev.terraform.tfstate'

        - task: TerraformTaskV4@4
          displayName: Terraform ${{parameters.command}}
          inputs:
            provider: 'azurerm'
            command: '${{parameters.command}}'
            workingDirectory: '$(Config_Dir)'
            environmentServiceNameAzureRM: '$(Azure_SC)'


